<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:BookStore.Infrastructure">
    <converters:CommandParametersConverter x:Key="CommandParametersConverter"/>
    <Image x:Key="IconLogout" Source="../Images/logout_1.png" Width="20" Height="20" />
    <Style x:Key="Icons" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
    </Style>
    <Style x:Key="IconButton" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="10 0 0 0"/>
        <Setter Property="Background" Value="AliceBlue"/>
        <Style.Triggers>
            <Trigger Property="Button.IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="UserTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="20"/>
    </Style>
    <Style x:Key="SearchTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Width" Value="70"/>
        <Setter Property="Height" Value="20"/>
    </Style>
    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="Width" Value="70"/>
        <Setter Property="Height" Value="20"/>
    </Style>
    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="AutoGenerateColumns" Value="True"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="Background" Value="#FFE8F3FF"/>
    </Style>
    <Style x:Key="DataGridDialog" TargetType="{x:Type DataGrid}">
        <Setter Property="Margin" Value="20 3"/>
        <Setter Property="AutoGenerateColumns" Value="True"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="Background" Value="Azure"/>
    </Style>
    <Style x:Key="Window" TargetType="{x:Type Window}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/images/background.webp" Stretch="Fill" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextBlockView" TargetType="{x:Type Control}">
        <Setter Property="Margin" Value="20 3"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="MinHeight" Value="15"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="DarkSlateBlue"/>
        <Setter Property="FontFamily" Value="Times New Roman"/>
    </Style>
    <Style x:Key="TextBlockDialog" BasedOn="{StaticResource TextBlockView}" TargetType="{x:Type TextBox}">
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Azure"/>
    </Style>
    <Style x:Key="TextBlockEditable" BasedOn="{StaticResource TextBlockView}" TargetType="{x:Type Control}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Azure"/>
    </Style>
    <Style x:Key="NumericUpDownEditable" BasedOn="{StaticResource TextBlockView}" TargetType="{x:Type Control}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Azure"/>
        <Setter Property="Padding" Value="0"/>
    </Style>
    <Style x:Key="TextBoxDialog" BasedOn="{StaticResource TextBlockView}" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="Azure"/>
    </Style>
    <Style x:Key="LabelToTextBlockDialog" BasedOn="{StaticResource TextBlockView}" TargetType="{x:Type Label}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>
    <Style x:Key="LabelToTextBoxDialog" BasedOn="{StaticResource TextBlockView}" TargetType="{x:Type Label}">
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>
    <Style x:Key="CheckBoxDialog" BasedOn="{StaticResource TextBlockView}" TargetType="{x:Type CheckBox}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Azure"/>
        <Setter Property="Margin" Value="20 3"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="2" ScaleY="2" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DatePickerDialog" TargetType="{x:Type DatePicker}">
        <Setter Property="Background" Value="Azure"/>
        <Setter Property="Margin" Value="20 3"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="MinHeight" Value="15"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="DarkSlateBlue"/>
        <Setter Property="FontFamily" Value="Times New Roman"/>
    </Style>
    <Style x:Key="ListViewDialog" TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="Azure"/>
        <Setter Property="Margin" Value="20 3"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="MinHeight" Value="15"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="DarkSlateBlue"/>
        <Setter Property="FontFamily" Value="Times New Roman"/>
    </Style>
    <Style x:Key="TopBarLabel" TargetType="{x:Type Label}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="DarkSlateBlue"/>
        <Setter Property="FontFamily" Value="Times New Roman"/>
    </Style>
    <Style x:Key="TopBarTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="DarkSlateBlue"/>
        <Setter Property="FontFamily" Value="Times New Roman"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Margin" Value="10 0"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
    </Style>
    <Style x:Key="TableName" BasedOn="{StaticResource TopBarTextBlock}" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Margin" Value="10 3"/>
    </Style>
    <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
        <Grid>
            <Border Background= "{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" Margin="{TemplateBinding Margin}" CornerRadius="10">
                <ContentPresenter Content= "{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                      Margin= "{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
        </Grid>
    </ControlTemplate>

    <Style x:Key="DialogButtons" TargetType="{x:Type Button}">
        <Style.Setters>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="Margin" Value="10 5"/>
            <Setter Property="Background" Value="Beige"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="MaxHeight" Value="40"/>
            <Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="Button.IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF89AACB"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="True">
                <Setter Property="Border.BorderBrush" Value="DarkGray" />
                <Setter Property="Button.Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Black" Direction="320" ShadowDepth="3" BlurRadius="5" Opacity="0.5" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Button.IsEnabled" Value="false">
                <Setter Property="Background" Value="Azure"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="TopBarTemplate" TargetType="{x:Type Button}">
        <Grid>
            <Border Background= "{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" Margin="{TemplateBinding Margin}" CornerRadius="3">
                <ContentPresenter Content= "{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                      Margin= "{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
        </Grid>
    </ControlTemplate>

    <Style x:Key="TopBarButtons" TargetType="{x:Type Button}">
        <Style.Setters>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Padding" Value="5 2"/>
            <Setter Property="Background" Value="Beige"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="MinWidth" Value="10"/>
            <Setter Property="Template" Value="{StaticResource TopBarTemplate}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="Button.IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF89AACB"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="True">
                <Setter Property="Border.BorderBrush" Value="DarkGray" />
            </Trigger>
            <Trigger Property="Button.IsEnabled" Value="false">
                <Setter Property="Background" Value="Azure"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <StreamGeometry x:Key="LeftButtonGeometry">M0,0 L150,0 L170,15 L150,30 L0,30 L20,15 Z</StreamGeometry>
    <StreamGeometry x:Key="RightButtonGeometry">M170,0 L20,0 L0,15 L20,30 L170,30 L150,15 Z</StreamGeometry>
    <Style x:Key="LeftFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Path Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Data="{StaticResource LeftButtonGeometry}" Width="170" Height="30"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RightFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Path Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Data="{StaticResource RightButtonGeometry}" Width="170" Height="30"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <EventTrigger x:Key="ShowAdminPanel">
        <BeginStoryboard>
            <Storyboard TargetProperty="Width">
                <DoubleAnimation From="0" To="170" Duration="0:0:1" />
            </Storyboard>
        </BeginStoryboard>
    </EventTrigger>

    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFE8F3FF"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>

    <ControlTemplate x:Key="LeftButtonTemplate"  TargetType="{x:Type Button}">
        <Grid>
            <Path Name="border" Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}" Data="{StaticResource LeftButtonGeometry}" Width="170" Height="30"/>
            <ContentPresenter Content="{TemplateBinding Content}"
                              Grid.Column="0"
                              Grid.Row="0"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="Stroke" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                <Setter Property="Stroke" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Fill" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                <Setter Property="Stroke" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                <Setter Property="Stroke" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
            </Trigger>
            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                <BeginStoryboard>
                    <Storyboard TargetProperty="Opacity">
                        <DoubleAnimation From="0.6" To="1" Duration="0:0:1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                <BeginStoryboard>
                    <Storyboard TargetProperty="Opacity">
                        <DoubleAnimation From="1" To="0.6" Duration="0:0:1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="RightButtonTemplate"  TargetType="{x:Type Button}">
        <Grid>
            <Path Name="border" Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}" Data="{StaticResource RightButtonGeometry}" Width="170" Height="30"/>
            <ContentPresenter Content="{TemplateBinding Content}"
                              Grid.Column="0"
                              Grid.Row="0"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="Stroke" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                <Setter Property="Stroke" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Fill" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                <Setter Property="Stroke" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                <Setter Property="Stroke" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
            </Trigger>
            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                <BeginStoryboard>
                    <Storyboard TargetProperty="Opacity">
                        <DoubleAnimation From="0.6" To="1" Duration="0:0:1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                <BeginStoryboard>
                    <Storyboard TargetProperty="Opacity">
                        <DoubleAnimation From="1" To="0.6" Duration="0:0:1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="LeftTriangleButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource LeftFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Template" Value="{StaticResource LeftButtonTemplate}"/>
        <Setter Property="Opacity" Value="0.6"/>
    </Style>

    <Style x:Key="RightTriangleButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource RightFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Template" Value="{StaticResource RightButtonTemplate}"/>
        <Setter Property="Opacity" Value="0.6"/>
    </Style>

    <TranslateTransform x:Key="TranslateRight" X="35" Y="0" />
    <RotateTransform x:Key="Rotate090" CenterX="24" CenterY="24" Angle="090"/>
    <RotateTransform x:Key="Rotate180" CenterX="24" CenterY="24" Angle="180"/>
    <RotateTransform x:Key="Rotate270" CenterX="24" CenterY="24" Angle="270"/>
    
    
</ResourceDictionary>